{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red235\green235\blue237;\red22\green22\blue24;}
{\*\expandedcolortbl;;\cssrgb\c93725\c93725\c94510;\cssrgb\c11373\c11373\c12549;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 <!DOCTYPE html>\
<html lang="en">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>A Simple Thought</title>\
    <style>\
        /* --- Basic Reset & Setup --- */\
        html, body \{\
            height: 100%;\
            margin: 0;\
            padding: 0;\
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;\
            background-color: #ffffff;\
            color: #333333;\
        \}\
\
        /* --- Centering Container (Flexbox) --- */\
        body \{\
            display: flex;\
            justify-content: center; /* Center horizontally */\
            align-items: center;    /* Center vertically */\
            text-align: center;\
        \}\
\
        /* --- Content Wrapper --- */\
        .container \{\
            max-width: 800px;\
            padding: 20px;\
        \}\
\
        /* --- Message Styling --- */\
        #message \{\
            font-size: 3rem; /* Big, clean font */\
            font-weight: 300; /* A lighter font-weight for a modern feel */\
            line-height: 1.4;\
            margin-bottom: 40px;\
        \}\
\
        /* --- Button Styling --- */\
        #next-button \{\
            background-color: #333333;\
            color: #ffffff;\
            border: none;\
            padding: 15px 30px;\
            font-size: 1rem;\
            font-weight: 500;\
            border-radius: 50px; /* Pill-shaped button */\
            cursor: pointer;\
            transition: background-color 0.3s ease, transform 0.2s ease;\
        \}\
\
        #next-button:hover \{\
            background-color: #555555;\
        \}\
\
        #next-button:active \{\
            transform: scale(0.98); /* Slight press-down effect */\
        \}\
\
        /* --- Mobile-Friendly Adjustments --- */\
        @media (max-width: 600px) \{\
            #message \{\
                font-size: 2rem; /* Make font a bit smaller on small screens */\
            \}\
\
            #next-button \{\
                padding: 12px 25px;\
            \}\
        \}\
    </style>\
</head>\
<body>\
\
    <div class="container">\
        <h1 id="message">Loading a thought...</h1>\
        <button id="next-button">Next</button>\
    </div>\
\
    <script>\
        // --- JavaScript Logic ---\
\
        // 1. Store all the messages in an array.\
        const messages = [\
            "When was the last time you fought for stupid stuff?",\
            "What's a small thing that made you smile today?",\
            "If you could have any superpower, what would it be and why?",\
            "What book or movie has changed your perspective on life?",\
            "What is something you are genuinely proud of?",\
            "If you had an extra hour in your day, what would you do with it?",\
            "What's the best piece of advice you've ever received?",\
            "Describe a perfect day from start to finish.",\
            "What's a skill you'd love to learn?"\
        ];\
\
        // 2. Get references to the HTML elements we need to interact with.\
        const messageElement = document.getElementById('message');\
        const nextButton = document.getElementById('next-button');\
        \
        // Keep track of the last message index to avoid showing the same one twice in a row.\
        let lastIndex = -1;\
\
        // 3. Create a function to show a new random message.\
        function showRandomMessage() \{\
            let randomIndex;\
\
            // Generate a new random index that is different from the last one.\
            // This loop ensures we don't get the same message twice in a row if there's more than one message.\
            do \{\
                randomIndex = Math.floor(Math.random() * messages.length);\
            \} while (messages.length > 1 && randomIndex === lastIndex);\
            \
            lastIndex = randomIndex; // Update the last index\
\
            // 4. Update the text content of the message element.\
            messageElement.textContent = messages[randomIndex];\
        \}\
\
        // 5. Add an event listener to the button.\
        // When the button is clicked, it will call our showRandomMessage function.\
        nextButton.addEventListener('click', showRandomMessage);\
\
        // 6. Show an initial message when the page first loads.\
        document.addEventListener('DOMContentLoaded', showRandomMessage);\
    </script>\
\
</body>\
</html><!DOCTYPE html>\
<html lang="en">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>A Simple Thought</title>\
    <style>\
        /* --- Basic Reset & Setup --- */\
        html, body \{\
            height: 100%;\
            margin: 0;\
            padding: 0;\
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;\
            background-color: #ffffff;\
            color: #333333;\
        \}\
\
        /* --- Centering Container (Flexbox) --- */\
        body \{\
            display: flex;\
            justify-content: center; /* Center horizontally */\
            align-items: center;    /* Center vertically */\
            text-align: center;\
        \}\
\
        /* --- Content Wrapper --- */\
        .container \{\
            max-width: 800px;\
            padding: 20px;\
        \}\
\
        /* --- Message Styling --- */\
        #message \{\
            font-size: 3rem; /* Big, clean font */\
            font-weight: 300; /* A lighter font-weight for a modern feel */\
            line-height: 1.4;\
            margin-bottom: 40px;\
        \}\
\
        /* --- Button Styling --- */\
        #next-button \{\
            background-color: #333333;\
            color: #ffffff;\
            border: none;\
            padding: 15px 30px;\
            font-size: 1rem;\
            font-weight: 500;\
            border-radius: 50px; /* Pill-shaped button */\
            cursor: pointer;\
            transition: background-color 0.3s ease, transform 0.2s ease;\
        \}\
\
        #next-button:hover \{\
            background-color: #555555;\
        \}\
\
        #next-button:active \{\
            transform: scale(0.98); /* Slight press-down effect */\
        \}\
\
        /* --- Mobile-Friendly Adjustments --- */\
        @media (max-width: 600px) \{\
            #message \{\
                font-size: 2rem; /* Make font a bit smaller on small screens */\
            \}\
\
            #next-button \{\
                padding: 12px 25px;\
            \}\
        \}\
    </style>\
</head>\
<body>\
\
    <div class="container">\
        <h1 id="message">Loading a thought...</h1>\
        <button id="next-button">Next</button>\
    </div>\
\
    <script>\
        // --- JavaScript Logic ---\
\
        // 1. Store all the messages in an array.\
        const messages = [\
            "When was the last time you fought for stupid stuff?",\
            "What's a small thing that made you smile today?",\
            "If you could have any superpower, what would it be and why?",\
            "What book or movie has changed your perspective on life?",\
            "What is something you are genuinely proud of?",\
            "If you had an extra hour in your day, what would you do with it?",\
            "What's the best piece of advice you've ever received?",\
            "Describe a perfect day from start to finish.",\
            "What's a skill you'd love to learn?"\
        ];\
\
        // 2. Get references to the HTML elements we need to interact with.\
        const messageElement = document.getElementById('message');\
        const nextButton = document.getElementById('next-button');\
        \
        // Keep track of the last message index to avoid showing the same one twice in a row.\
        let lastIndex = -1;\
\
        // 3. Create a function to show a new random message.\
        function showRandomMessage() \{\
            let randomIndex;\
\
            // Generate a new random index that is different from the last one.\
            // This loop ensures we don't get the same message twice in a row if there's more than one message.\
            do \{\
                randomIndex = Math.floor(Math.random() * messages.length);\
            \} while (messages.length > 1 && randomIndex === lastIndex);\
            \
            lastIndex = randomIndex; // Update the last index\
\
            // 4. Update the text content of the message element.\
            messageElement.textContent = messages[randomIndex];\
        \}\
\
        // 5. Add an event listener to the button.\
        // When the button is clicked, it will call our showRandomMessage function.\
        nextButton.addEventListener('click', showRandomMessage);\
\
        // 6. Show an initial message when the page first loads.\
        document.addEventListener('DOMContentLoaded', showRandomMessage);\
    </script>\
\
</body>\
</html>}